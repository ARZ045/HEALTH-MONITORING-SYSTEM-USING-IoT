import serial
import string
import httplib, urllib
import time
sleep = 0 # how many seconds to sleep between posts to the channel
key1 ='DZFD0MZ0Y7OZ68N3'
while 1 :
   ser=serial.Serial('/dev/ttyACM1',9600);
   var= ser.readline()
   a1=var.split(',',12)
   print a1
   try:
      str1 = ''.join(a1[0:1])
      str2 = ''.join(a1[1:2])

   except:
         print"I didn't recognize {0} as a number"
            
   params1 = urllib.urlencode({'field1': str1,'field2': str2,'key':key1 }) 
   headers = {"Content-typZZe": "application/x-www-form-urlencoded","Accept": "text/plain"}
   conn = httplib.HTTPConnection("api.thingspeak.com:80")
   try:
       conn.request("POST", "/update", params1, headers)
       response = conn.getresponse()
       print response.status, response.reason
       data = response.read()
       conn.close()
   except:
          print "failed "
          #break
#sleep for desired amount of time
if __name__ == "__main__":
        while True:
  #              thermometer()
               time.sleep(sleep)



# PATIENT 2

import serial
import string
import httplib, urllib
import time
sleep = 0 # how many seconds to sleep between posts to the channel
key1 ='NNHRJJP8D2ST6K1U'
while 1 :
   ser=serial.Serial('/dev/ttyACM1',9600);
   var= ser.readline()
   a1=var.split(',',12)
   print a1
   try:
      str1 = ''.join(a1[0:1])
      str2 = ''.join(a1[1:2])
      str3 = ''.join(a1[2:3])

   except:
         print"I didn't recognize {0} as a number"
            
   params1 = urllib.urlencode({'field1': str1,'field2': str2,'field3': str3,'key':key1 }) 
   headers = {"Content-typZZe": "application/x-www-form-urlencoded","Accept": "text/plain"}
   conn = httplib.HTTPConnection("api.thingspeak.com:80")
   try:
       conn.request("POST", "/update", params1, headers)
       response = conn.getresponse()
       print response.status, response.reason
       data = response.read()
       conn.close()
   except:
          print "failed "
          #break
#sleep for desired amount of time
if __name__ == "__main__":
        while True:
  #              thermometer()
               time.sleep(sleep)
               
               

